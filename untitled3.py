# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15pQHZXpaH82Fd6Qccupq2SO2bIR87dYl
"""

import numpy as np
import matplotlib.pyplot as plt
capacity_Ah = 60.0
voltage_nominal = 3.7
internal_resistance = 0.05
total_time = 3600
dt = 1
time = np.arange(0, total_time, dt)
current = np.zeros_like(time)
voltage = np.zeros_like(time)
current[:1800] = 12
voltage[:1800] = voltage_nominal + 0.1
current[1800:] = -20
voltage[1800:] = voltage_nominal - 0.15
soc = np.zeros_like(time, dtype=float)
efficiency = np.zeros_like(time, dtype=float)
soc[0] = 40.0
for t in range(1, len(time)):
    I = current[t]
    V = voltage[t]
    delta_soc = (I * dt / 3600) / capacity_Ah * 100
    soc[t] = soc[t - 1] + delta_soc
    soc[t] = np.clip(soc[t], 0, 100)
    if I > 0:
        power_in = I * V
        power_stored = I * voltage_nominal
        eff = power_stored / power_in if power_in > 0 else 1
    elif I < 0:
        power_out = -I * voltage_nominal
        power_drawn = -I * V
        eff = power_out / power_drawn if power_drawn > 0 else 1
    else:
        eff = 1.0

    efficiency[t] = np.clip(eff, 0, 1)
print("------ Battery Simulation Results ------")
print(f"Initial SOC: {soc[0]:.2f}%")
print(f"SOC after 30 minutes (charging): {soc[1800]:.2f}%")
print(f"SOC after 60 minutes (discharging): {soc[-1]:.2f}%\n")

print(f"Efficiency at 30 minutes: {efficiency[1800]:.3f}")
print(f"Efficiency at 60 minutes: {efficiency[-1]:.3f}")
print("----------------------------------------")